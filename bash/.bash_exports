# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE=1048576                   # big big history
export HISTFILESIZE=1073741824              # big big history
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
# Save and reload the history after each command finishes
# Append history list to history file, clear history list, load history file into history list
export PROMPT_COMMAND='history -a; history -c; history -r;'
# ignore ls without options and builtin commands
export HISTIGNORE='&:ls:[bf]g:exit: *'
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
export HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend
# combine multiline commands into one in history
shopt -s cmdhist
# case-insensitive globbing
shopt -s nocaseglob
# cd autocorrect
shopt -s cdspell
# check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
shopt -s checkwinsize
# turn on confirmation for history expansion (histexpand)
shopt -s histverify

# set default terminal editor (for sudoedit)
export EDITOR='vimx'
export VISUAL='vimx'
# configure less pager
# set default terminal pager
export PAGER='less'
# set options for less
export LESS='--quit-if-one-screen --ignore-case --status-column --LONG-PROMPT --HILITE-UNREAD --tabs=4 --no-init --window=-4 --RAW-CONTROL-CHARS'

# shell colors in urxvt with gruvbox theme
# setaf foreground, setab background, set color using ANSI escape
BLACK="$(tput setaf 0)"
RED="$(tput setaf 1)"
GREEN="$(tput setaf 2)"
YELLOW="$(tput setaf 3)"
BLUE="$(tput setaf 4)"
PURPLE="$(tput setaf 5)"
AQUA="$(tput setaf 6)"
LIGHT_GREY="$(tput setaf 7)"
GREY="$(tput setaf 8)"
LIGHT_RED="$(tput setaf 9)"
LIGHT_GREEN="$(tput setaf 10)"
LIGHT_YELLOW="$(tput setaf 11)"
LIGHT_BLUE="$(tput setaf 12)"
LIGHT_PURPLE="$(tput setaf 13)"
LIGHT_AQUA="$(tput setaf 14)"
WHITE="$(tput setaf 15)"
BACKGROUND="$(tput setaf 236)"
REVERSE="$(tput rev)"
INVISIBLE="$(tput invis)"
START_STANDOUT="$(tput smso)"
END_STANDOUT="$(tput rmso)"
START_UNDERLINE="$(tput smul)"
END_UNDERLINE="$(tput rmul)"
BLINK="$(tput blink)"
BOLD="$(tput bold)"
RESET="$(tput sgr0)" # reset all colors, returns '\e[0m'

# colored less for man pages
export LESS_TERMCAP_mb="${BLINK}"                         # begin blinking
export LESS_TERMCAP_md="${BOLD}${LIGHT_YELLOW}"           # begin bold
export LESS_TERMCAP_me="${RESET}"                         # end mode
export LESS_TERMCAP_se="${END_STANDOUT}${RESET}"          # end standout-mode
export LESS_TERMCAP_so="${START_STANDOUT}${LIGHT_YELLOW}" # begin standout-mode - info box
export LESS_TERMCAP_ue="${END_UNDERLINE}${RESET}"         # end underline
export LESS_TERMCAP_us="${START_UNDERLINE}${YELLOW}"      # begin underline
export GROFF_NO_SGR=1                                     # for konsole and gnome-terminal

#Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# __git_ps1
source /usr/share/git-core/contrib/completion/git-prompt.sh
# or run "git config bash.showDirtyState false"
# nonempty, it's slow in large repos
export GIT_PS1_SHOWDIRTYSTATE=0
# colored prompt
force_color_prompt=yes
# export these for subshells
# export -f parse_git_branch parse_git_status we_are_in_git_work_tree
# PS1
# username and host
if (( $EUID != 0 )); then
    PS1='\['"${LIGHT_YELLOW}"'\]'
else
    PS1='\['"${RED}"'\]'
fi
PS1="${PS1}"'\u@\h '
# current working directory
PS1="${PS1}"'\['"${BLUE}"'\]\w '
# git prompt
PS1="${PS1}"'\['"${LIGHT_PURPLE}"'\]$(__git_ps1 "(%s) ")'
# jobs
PS1="${PS1}"'\['"${LIGHT_RED}"'\]$(jobscount)'
# hash sign or dollar sign
# depending on whether user is root or not
PS1="${PS1}"'\['"${GREEN}"'\]'
if (( $EUID != 0 )); then
    PS1="${PS1}"'$ '
else
    PS1="${PS1}"'# '
fi
PS1="${PS1}"'\['"${RESET}"'\]'
export PS1
export PS2='\['"${GREEN}"'\]> \['"${RESET}"'\]'
export PS3='\['"${GREEN}"'\]> \['"${RESET}"'\]'
export PS4='\['"${GREEN}"'\]#? \['"${RESET}"'\]'

# enable color support of ls
if [ -x /usr/bin/dircolors ]; then
	test -r "$HOME/.dircolors" && eval "$(dircolors -b $HOME/.dircolors)" || eval "$(dircolors -b)"
fi
# ls colors
LS_COLORS="$LS_COLORS:"'ex=1;92:di=1;34:tw=1;34:ow=1;34:' ; export LS_COLORS
# colored GCC warnings and errors
# default
# export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# cowsay
export COWPATH='/usr/share/cowsay'
# set COWPATH so it includes user's cows
if [ -d "$HOME/.cowsay" ] ; then
    COWPATH="$COWPATH:$HOME/.cowsay"
fi

# sdcv variables
export STARDICT_DATA_DIR='/usr/share/stardict/dic'
export SDCV_PAGER='less'

# added by Anaconda3 4.4.0 installer
export PATH="/home/armand/anaconda3/bin:$PATH"

export FZF_DEFAULT_COMMAND='bash -c "rg"'
